---
import type { MenuItem } from '../types';
import { translations } from '../../../i18n/translations';
import type { LanguageCode } from '../../../i18n/constants';

interface Props {
  item: MenuItem;
  language: string;
}

const { item, language } = Astro.props;
const t = translations[language as LanguageCode];

function getTranslation(key: string): string {
  return key.split('.').reduce((obj, key) => obj?.[key as keyof typeof obj], t) || key;
}
---

{
  item.children ? (
    <div class="space-y-2">
      <div class="font-medium">{getTranslation(item.label)}</div>
      <div class="pl-4 space-y-2">
        {item.children.map((child) => (
          <a
            href={child.href}
            class="block text-[var(--color-text-offset)] hover:text-[var(--color-text-base)] transition-colors"
          >
            {getTranslation(child.label)}
          </a>
        ))}
      </div>
    </div>
  ) : (
    <a
      href={item.href}
      class="block text-[var(--color-text-offset)] hover:text-[var(--color-text-base)] transition-colors"
    >
      {getTranslation(item.label)}
    </a>
  )
}
